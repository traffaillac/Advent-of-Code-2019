adj = [
	0b00000_00000_0000_00001_00010,
	0b00000_00000_0000_00010_00101,
	0b00000_00000_0000_00100_01010,
	0b00000_00000_0000_01000_10100,
	0b00000_00000_0000_10000_01000,
	0b00000_00000_0001_00010_00001,
	0b00000_00000_0010_00101_00010,
	0b00000_00000_0000_01010_00100,
	0b00000_00000_0100_10100_01000,
	0b00000_00000_1000_01000_10000,
	0b00000_00001_0010_00001_00000,
	0b00000_00010_0001_00010_00000,
	0b00000_01000_1000_01000_00000,
	0b00000_10000_0100_10000_00000,
	0b00001_00010_0001_00000_00000,
	0b00010_00101_0010_00000_00000,
	0b00100_01010_0000_00000_00000,
	0b01000_10100_0100_00000_00000,
	0b10000_01000_1000_00000_00000,
	0b00010_00001_0000_00000_00000,
	0b00101_00010_0000_00000_00000,
	0b01010_00100_0000_00000_00000,
	0b10100_01000_0000_00000_00000,
	0b01000_10000_0000_00000_00000]
inner = [
	0, 0, 0, 0, 0,
	0, 0, 0b11111, 0, 0,
	0, 0b00001_00001_0001_00001_00001, 0b10000_10000_1000_10000_10000, 0,
	0, 0, 0b11111_00000_0000_00000_00000, 0, 0,
	0, 0, 0, 0, 0]
outer = [
	0b00000_00000_0010_00100_00000,
	0b00000_00000_0000_00100_00000,
	0b00000_00000_0000_00100_00000,
	0b00000_00000_0000_00100_00000,
	0b00000_00000_0100_00100_00000,
	0b00000_00000_0010_00000_00000, 0, 0, 0, 0b00000_00000_0100_00000_00000,
	0b00000_00000_0010_00000_00000, 0, 0, 0b00000_00000_0100_00000_00000,
	0b00000_00000_0010_00000_00000, 0, 0, 0, 0b00000_00000_0100_00000_00000,
	0b00000_00100_0010_00000_00000,
	0b00000_00100_0000_00000_00000,
	0b00000_00100_0000_00000_00000,
	0b00000_00100_0000_00000_00000,
	0b00000_00100_0100_00000_00000]

def popcount(i):
	c = 0
	while i > 0:
		c += 1
		i &= i - 1
	return c


state = [sum((c=='#')<<i for i, c in enumerate('.#..##..####.###.###..##'))]
for m in range(200):
	if state[0] != 0 or state[-1] != 0:
		state = [0, *state, 0]
	new = state[:]
	for i in range(len(state)):
		for j in range(24):
			bugs = popcount(state[i] & adj[j])
			if i > 0:
				bugs += popcount(state[i-1] & outer[j])
			if i < len(state)-1:
				bugs += popcount(state[i+1] & inner[j])
			if state[i] & 1 << j:
				new[i] ^= (bugs != 1) << j
			else:
				new[i] ^= (1 <= bugs <= 2) << j
		# print(f'i={i}, state={"#" if state & 1 << i else "."}, {bugs} adjacent bugs, new={"#" if new & 1 << i else "."}')
	state = new
print(sum(popcount(s) for s in state))
